#	#
# Check https://circleci.com/docs/2.0/language-python/ 
#	#
version: 2
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    #docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      #- image: circleci/python:3.7
      #- image: circleci/node:4.8.2
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    working_directory: ~/prueba_travis
    steps:
      - checkout
      - run: sudo apt-get update

      - run: 
          name: install python 3
          command: sudo apt-get install software-properties-common

      - run: sudo add-apt-repository ppa:deadsnakes/ppa
      - run: sudo apt-get update
      - run: sudo apt-get install python3.6

      - run:
          name: pip 3
          command: sudo apt-get update
      - run: sudo apt-get -y install python3-pip

      - run:
          name: install curl
          command: sudo apt-get install curl
      #- run: 
      #    name: install dependences node
      #    command: curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
        
      #- run: sudo apt-get install nodejs -y
      - run: sudo apt-get install npm 
      - run: 
          name: update-npm
          command: sudo apt-get install -y build-essential

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "package-lock.json" }}

      

      #- run: sudo chown -R circleci:circleci /usr/local/bin
      #- run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      
      
      
     
      - run:
          name: install dependencies
          command: make dependences
            #|
            #python3 -m venv venv
            #. venv/bin/activate
            
            
     
      - run:
          name: init app
          command: make ini_ap
      
      - run:
          name: status app
          command: make status
      
      - run:
          name: tests
          command: make -B test     
      
      - run:
          name: stop app
          command: make stop_app

      - run:
          name: delete app
          command: make delete_app
  
      - save_cache: # cache Python dependencies using checksum of Pipfile as the cache-key
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      
      
      
   
      - store_artifacts:
          path: test-reports
          destination: test-reports
